#!/usr/bin/env ruby
require 'yaml'
require 'optparse'
require 'escort'
require_relative '../lib/cli'

Escort::App.create do |app|
  app.options do |opts|
    opts.opt :file, 'file', :short => '-f', :long => '--file', :type => :string

    app.command '--export-json' do |command|
      command.action do |options, arguments|
        Command::CLI.new(options, arguments).execute
      end
    end
    app.command '--prepare-json' do |command|
      command.action do |options, arguments|
        Command::CLI.new(options, arguments).execute
      end
    end
    app.command '--import' do |command|
      command.action do |options, arguments|
        Command::CLI.new(options, arguments).execute
      end
    end
    app.command '--convert-json' do |command|
      command.action do |options, arguments|
        Command::CLI.new(options, arguments).execute
      end
    end
    app.command '--test-credentials' do |command|
      command.action do |options, arguments|
        Command::CLI.new(options, arguments).execute
      end
    end
  end
end

# options = {}
# OptionParser.new do |opts|
#   options[:settings] = nil
#   opts.on('-s', '--settings FILE', 'Export settings from YML file') do |file|
#     options[:settings] = file
#   end
#   options[:export] = nil
#   opts.on('-e', '--export-json', 'Export data') do
#     options[:export] ='--export-json'
#   end
#   options[:prepare] = nil
#   opts.on('-p', '--prepare-json', 'Prepare data to import') do
#     options[:prepare] ='--prepare-json'
#   end
#   options[:import] = nil
#   opts.on('-i', '--import', 'Import data') do
#     options[:import] = '--import'
#   end
#   options[:convert] = nil
#   opts.on('-c', '--convert-json', 'Convert contentful data to import form') do
#     options[:import] = '--convert-json'
#   end
#   options[:test] = nil
#   opts.on('-t', '--test-credentials', 'Test contentful credentials') do
#     options[:test] = '--test-credentials'
#   end
# end.parse!
#
# fail 'Missing settings.yml file, `contentful-importer --settings=PATH`' unless options[:settings]
# SETTINGS = YAML.load_file(options[:settings])
# options.delete_if { |key, _v| key == :settings }.compact!
#
# fail 'Too many action in one time, `contentful-importer --settings=PATH --action`' if options.count > 1
# Migrator.new.run(options.values.first)
#
